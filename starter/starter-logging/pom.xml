<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>common-parent</artifactId>
        <groupId>com.xpay</groupId>
        <version>1.0-Release</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>starter-logging</artifactId>
    <packaging>jar</packaging>
    <description>使用log4j2作为日志实现的starter，应用启动时会从配置中心读取log4j2的配置</description>

    <dependencies>
        <!-- SpringBoot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency> <!-- 使用nacos作为配置中心时引入 -->
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency> <!-- 引入log4j2依赖，代表使用log4j2 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!-- 需要使用 AsyncLogger 时引入 -->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
        </dependency>
        <!-- 需要使用 AsyncLogger 时引入 -->

        <!-- 需要使用 JdbcAppender 时引入 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>
        <!-- 需要使用 JdbcAppender 时引入 -->

        <!-- 需要使用 SmtpAppender 时引入 -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>
        <!-- 需要使用 SmtpAppender 时引入 -->
    </dependencies>
</project>