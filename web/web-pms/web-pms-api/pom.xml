<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>web-pms</artifactId>
        <groupId>com.xpay</groupId>
        <version>1.0-Release</version>
    </parent>

    <artifactId>web-pms-api</artifactId>

    <properties>
        <appName>${project.parent.artifactId}</appName><!-- 使用父项目名作为应用名 -->
    </properties>

    <dependencies>
        <dependency> <!-- 把nacos作为配置中心时需要引入的依赖 -->
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
        </dependency>

        <!-- dubbo START -->
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
        </dependency>
        <dependency><!-- 使用 zookeeper 作为Dubbo注册中心时引入 -->
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-dependencies-zookeeper</artifactId>
            <type>pom</type>
        </dependency>
        <!-- dubbo END -->

        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>web-api-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>starter-activemq-trace</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-user</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-merchant</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-mch-notify</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-message</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-timer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-sequence</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-base-config</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-extend</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${appName}</finalName>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- clean插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/resources/static</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version> <!-- 3.2.0 版本有bug -->
                <executions>
                    <!-- 把pms-view前端项目构建之后的文件拷贝到当前项目的 resource/static 目录下 -->
                    <execution>
                        <id>copy web-pms-view/dist to resources/static folder</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>src/main/resources/static</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource> <!-- 指定前端项目静态文件的目录，在common-parent中有配置不执行filter过滤的文件后缀 -->
                                    <directory>${project.parent.basedir}/web-pms-view/dist</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 把当前项目构建好的jar包复制到父项目的target目录下，目的是为了使jenkins的部署更方便 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy jar to parent's target folder</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <copy todir="../target" overwrite="true">
                                    <fileset dir="${project.build.directory}">
                                        <include name="*.jar" />
                                        <include name="*.sh" />
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>