<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>common-parent</artifactId>
        <groupId>com.xpay</groupId>
        <version>1.0-Release</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>gateway-api</artifactId>
    <description>接收商户api请求的网关</description>

    <build>
        <finalName>${appName}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency> <!-- 引入log4j2依赖，代表使用log4j2 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>
        <dependency> <!-- 需要使用nacos作为配置中心时引入 -->
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency> <!-- 需要使用zookeeper作为SpringCloud的注册中心时引入 -->
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zookeeper-discovery</artifactId>
        </dependency>
<!--        <dependency> &lt;!&ndash; 需要使用nacos作为SpringCloud的注册中心时引入 &ndash;&gt;-->
<!--            <groupId>com.alibaba.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>-->
<!--        </dependency>-->

        <!-- 需要使用hystrix熔断器时引入 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <!-- 需要使用hystrix熔断器时引入 -->
<!--        &lt;!&ndash; 需要使用alibaba sentinel作为熔断/限流器时引入  &ndash;&gt;-->
<!--        <dependency>&lt;!&ndash; 需要与 spring-cloud-starter-alibaba-sentinel 一起使用 &ndash;&gt;-->
<!--            <groupId>com.alibaba.cloud</groupId>-->
<!--            <artifactId>spring-cloud-alibaba-sentinel-gateway</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>com.xpay</groupId>-->
<!--            <artifactId>starter-sentinel</artifactId>-->
<!--            <version>${project.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; 需要使用alibaba sentinel作为熔断/限流器时引入  &ndash;&gt;-->

        <!-- redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>io.lettuce</groupId>
            <artifactId>lettuce-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <!-- redis -->

        <!-- dubbo START -->
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
        </dependency>
        <dependency><!-- 使用 zookeeper 作为Dubbo注册中心时引入 -->
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-dependencies-zookeeper</artifactId>
            <type>pom</type>
        </dependency>
<!--        <dependency>&lt;!&ndash; 使用 Nacos 作为Dubbo注册中心时引入 &ndash;&gt;-->
<!--            <groupId>org.apache.dubbo</groupId>-->
<!--            <artifactId>dubbo-registry-nacos</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>&lt;!&ndash; 使用 Nacos 作为Dubbo注册中心时引入 &ndash;&gt;-->
<!--            <groupId>com.alibaba.nacos</groupId>-->
<!--            <artifactId>nacos-client</artifactId>-->
<!--        </dependency>-->
        <!-- dubbo END -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>common-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>starter-plugin</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.xpay</groupId>
            <artifactId>facade-merchant</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>
</project>