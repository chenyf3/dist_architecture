<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xpay.service.accountmch.entity.AccountCommonUnique">
	<sql id="table"> tbl_account_common_unique </sql>

	<!-- 用于返回的bean对象 -->
	<resultMap id="BaseResultMap" type="com.xpay.service.accountmch.entity.AccountCommonUnique">
		<result column="ID" property="id" jdbcType="BIGINT"/>
		<result column="UNIQUE_KEY" property="uniqueKey" jdbcType="CHAR"/>
		<result column="CREATE_DATE" property="createDate" jdbcType="DATE"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		ID,
		UNIQUE_KEY,
		CREATE_DATE
	</sql>

	<!-- 插入记录 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="AccountCommonUnique">
		INSERT INTO <include refid="table" /> (
		UNIQUE_KEY,
		CREATE_DATE
		) VALUES (
		#{uniqueKey,jdbcType=CHAR},
		#{createDate,jdbcType=DATE}
		)
	</insert>

	<!-- 批量插入记录 -->
	<insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="list">
		INSERT INTO <include refid="table" /> (
		UNIQUE_KEY,
		CREATE_DATE
		) VALUES
		<foreach collection="list" item="item" separator=",">
			(
			#{item.uniqueKey,jdbcType=CHAR},
			#{item.createDate,jdbcType=DATE}
			)
		</foreach>
	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="AccountCommonUnique">
		UPDATE <include refid="table" />
		<set>
			UNIQUE_KEY = #{uniqueKey,jdbcType=CHAR},
			CREATE_DATE = #{createDate,jdbcType=DATE}
		</set>
		WHERE ID = #{id,jdbcType=BIGINT}
	</update>

	<!-- 只更新不为null的属性 -->
	<update id="updateIfNotNull" parameterType="AccountCommonUnique">
		UPDATE <include refid="table" />
		<set>
			<if test="uniqueKey != null">
				UNIQUE_KEY = #{uniqueKey,jdbcType=CHAR},
			</if>
			<if test="createDate != null">
				CREATE_DATE = #{createDate,jdbcType=DATE}
			</if>
		</set>
		WHERE ID = #{id,jdbcType=BIGINT}
	</update>

	<!-- 多条件组合查询 -->
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
		<choose>
			<when test="sortColumns != null and sortColumns !='' ">
				<![CDATA[ ORDER BY ${sortColumns} ]]>
			</when>
			<otherwise>
				<![CDATA[ ORDER BY ID DESC ]]>
			</otherwise>
		</choose>
	</select>

	<!-- 根据多条件组合查询，计算总记录数 -->
	<select id="countBy" parameterType="java.util.Map" resultType="long">
		SELECT count(ID) FROM
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<!-- 按查询条件删除 -->
	<delete id="deleteBy">
		DELETE FROM <include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</delete>

	<!-- 根据多个id查询 -->
	<select id="listByIdList" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE ID IN
		<foreach collection="list" item="item" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
	</select>

	<!-- 根据id查询 -->
	<select id="getById" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE ID = #{id,jdbcType=BIGINT}
	</select>

	<!-- 按id主键删除 -->
	<delete id="deleteById">
		DELETE FROM <include refid="table" /> WHERE ID = #{id,jdbcType=BIGINT}
	</delete>

	<!-- 按多个id主键删除 -->
	<delete id="deleteByIdList" parameterType="list">
		DELETE FROM <include refid="table" />
		WHERE ID IN
		<foreach collection="list" item="item" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
	</delete>

	<!-- ↑↑↑↑↑↑ 如果有新增字段、删除字段、修改字段 以上内容可用模板生成新内容后直接替换 ↑↑↑↑↑↑ -->
	<!-- ↓↓↓↓↓↓ 以下内容是根据需求手动添加或修改的，请勿使用模板内容直接覆盖 ↓↓↓↓↓↓ -->

	<sql id="condition_sql">
		<if test="id != null ">
			AND ID = #{id,jdbcType=BIGINT}
		</if>
		<if test="idList != null and idList.size() > 0">
			AND ID IN <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
		</if>
		<if test="uniqueKey != null and uniqueKey !='' ">
			AND UNIQUE_KEY = #{uniqueKey,jdbcType=CHAR}
		</if>
		<if test="createDate != null ">
			AND CREATE_DATE = #{createDate,jdbcType=DATE}
		</if>
	</sql>

	<!-- 跟数据迁移相关的语句 START -->
	<select id="listNeedMigrateDates" parameterType="map" resultType="java.util.Date">
		select CREATE_DATE from <include refid="table" /> WHERE CREATE_DATE <![CDATA[ <= ]]> #{migrationEndDate,jdbcType=DATE} GROUP BY CREATE_DATE
	</select>
	<select id="listIdsForMigration" parameterType="map" resultType="long">
		SELECT ID from <include refid="table" />
		WHERE CREATE_DATE = #{currMigrateDate,jdbcType=DATE} limit #{migrateNumPerTime}
	</select>
	<delete id="deleteRecordByIdList" parameterType="map">
		delete from <include refid="table" />
		where ID IN <foreach collection="recordIdList" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
	</delete>
	<!-- 跟数据迁移相关的语句 END -->
</mapper>

