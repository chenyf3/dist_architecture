<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xpay.service.accountmch.entity.AccountProcessPendingHistory">
	<sql id="table"> tbl_account_process_pending_history </sql>

	<!-- 用于返回的bean对象 -->
	<resultMap id="BaseResultMap" type="com.xpay.service.accountmch.entity.AccountProcessPendingHistory">
		<result column="ID" property="id" jdbcType="BIGINT"/>
		<result column="VERSION" property="version" jdbcType="SMALLINT"/>
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="CREATE_DATE" property="createDate" jdbcType="DATE"/>
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP"/>
		<result column="PROCESS_STAGE" property="processStage" jdbcType="SMALLINT"/>
		<result column="MERGE_SUPPORT" property="mergeSupport" jdbcType="TINYINT"/>
		<result column="REQUEST_DTO" property="requestDto" jdbcType="OTHER"/>
		<result column="PROCESS_DTO" property="processDto" jdbcType="OTHER"/>
		<result column="REMARK" property="remark" jdbcType="VARCHAR"/>
		<result column="MIGRATION_TIME" property="migrationTime" jdbcType="TIMESTAMP"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		ID,
		VERSION,
		CREATE_TIME,
		CREATE_DATE,
		MODIFY_TIME,
		PROCESS_STAGE,
		MERGE_SUPPORT,
		REQUEST_DTO,
		PROCESS_DTO,
		REMARK,
		MIGRATION_TIME
	</sql>

	<!-- 插入记录 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="AccountProcessPendingHistory">
		INSERT INTO <include refid="table" /> (
		VERSION,
		CREATE_DATE,
		MODIFY_TIME,
		PROCESS_STAGE,
		MERGE_SUPPORT,
		REQUEST_DTO,
		PROCESS_DTO,
		REMARK,
		MIGRATION_TIME
		) VALUES (
		0,
		#{createDate,jdbcType=DATE},
		#{modifyTime,jdbcType=TIMESTAMP},
		#{processStage,jdbcType=SMALLINT},
		#{mergeSupport,jdbcType=TINYINT},
		#{requestDto,jdbcType=OTHER},
		#{processDto,jdbcType=OTHER},
		#{remark,jdbcType=VARCHAR},
		#{migrationTime,jdbcType=TIMESTAMP}
		)
	</insert>

	<!-- 批量插入记录 -->
	<insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="list">
		INSERT INTO <include refid="table" /> (
		VERSION,
		CREATE_DATE,
		MODIFY_TIME,
		PROCESS_STAGE,
		MERGE_SUPPORT,
		REQUEST_DTO,
		PROCESS_DTO,
		REMARK,
		MIGRATION_TIME
		) VALUES
		<foreach collection="list" item="item" separator=",">
			(
			0,
			#{item.createDate,jdbcType=DATE},
			#{item.modifyTime,jdbcType=TIMESTAMP},
			#{item.processStage,jdbcType=SMALLINT},
			#{item.mergeSupport,jdbcType=TINYINT},
			#{item.requestDto,jdbcType=OTHER},
			#{item.processDto,jdbcType=OTHER},
			#{item.remark,jdbcType=VARCHAR},
			#{item.migrationTime,jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="AccountProcessPendingHistory">
		UPDATE <include refid="table" />
		<set>
			VERSION = #{version,jdbcType=SMALLINT} + 1,
			CREATE_DATE = #{createDate,jdbcType=DATE},
			MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
			PROCESS_STAGE = #{processStage,jdbcType=SMALLINT},
			MERGE_SUPPORT = #{mergeSupport,jdbcType=TINYINT},
			REQUEST_DTO = #{requestDto,jdbcType=OTHER},
			PROCESS_DTO = #{processDto,jdbcType=OTHER},
			REMARK = #{remark,jdbcType=VARCHAR},
			MIGRATION_TIME = #{migrationTime,jdbcType=TIMESTAMP}
		</set>
		WHERE ID = #{id,jdbcType=BIGINT} and VERSION = #{version,jdbcType=SMALLINT}
	</update>

	<!-- 只更新不为null的属性 -->
	<update id="updateIfNotNull" parameterType="AccountProcessPendingHistory">
		UPDATE <include refid="table" />
		<set>
			VERSION = #{version,jdbcType=SMALLINT} + 1,
			<if test="createDate != null">
				CREATE_DATE = #{createDate,jdbcType=DATE},
			</if>
			<if test="modifyTime != null">
				MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="processStage != null">
				PROCESS_STAGE = #{processStage,jdbcType=SMALLINT},
			</if>
			<if test="mergeSupport != null">
				MERGE_SUPPORT = #{mergeSupport,jdbcType=TINYINT},
			</if>
			<if test="requestDto != null">
				REQUEST_DTO = #{requestDto,jdbcType=OTHER},
			</if>
			<if test="processDto != null">
				PROCESS_DTO = #{processDto,jdbcType=OTHER},
			</if>
			<if test="remark != null">
				REMARK = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="migrationTime != null">
				MIGRATION_TIME = #{migrationTime,jdbcType=TIMESTAMP}
			</if>
		</set>
		WHERE ID = #{id,jdbcType=BIGINT} and VERSION = #{version,jdbcType=SMALLINT}
	</update>

	<!-- 多条件组合查询 -->
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
		<choose>
			<when test="sortColumns != null and sortColumns !='' ">
				<![CDATA[ ORDER BY ${sortColumns} ]]>
			</when>
			<otherwise>
				<![CDATA[ ORDER BY ID DESC ]]>
			</otherwise>
		</choose>
	</select>

	<!-- 根据多条件组合查询，计算总记录数 -->
	<select id="countBy" parameterType="java.util.Map" resultType="long">
		SELECT count(ID) FROM
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<!-- 按查询条件删除 -->
	<delete id="deleteBy">
		DELETE FROM <include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</delete>

	<!-- 根据多个id查询 -->
	<select id="listByIdList" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE ID IN
		<foreach collection="list" item="item" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
	</select>

	<!-- 根据id查询 -->
	<select id="getById" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE ID = #{id,jdbcType=BIGINT}
	</select>

	<!-- 按id主键删除 -->
	<delete id="deleteById">
		DELETE FROM <include refid="table" /> WHERE ID = #{id,jdbcType=BIGINT}
	</delete>

	<!-- 按多个id主键删除 -->
	<delete id="deleteByIdList" parameterType="list">
		DELETE FROM <include refid="table" />
		WHERE ID IN
		<foreach collection="list" item="item" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
	</delete>

	<!-- ↑↑↑↑↑↑ 如果有新增字段、删除字段、修改字段 以上内容可用模板生成新内容后直接替换 ↑↑↑↑↑↑ -->
	<!-- ↓↓↓↓↓↓ 以下内容是根据需求手动添加或修改的，请勿使用模板内容直接覆盖 ↓↓↓↓↓↓ -->

	<sql id="condition_sql">
		<if test="id != null ">
			AND ID = #{id,jdbcType=BIGINT}
		</if>
		<if test="idList != null and idList.size() > 0">
			AND ID IN <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
		</if>
		<if test="createTimeBegin != null and createTimeEnd != null ">
			AND CREATE_TIME BETWEEN #{createTimeBegin,jdbcType=TIMESTAMP} AND #{createTimeEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="createDate != null ">
			AND CREATE_DATE = #{createDate,jdbcType=DATE}
		</if>
		<if test="processStage != null ">
			AND PROCESS_STAGE = #{processStage,jdbcType=SMALLINT}
		</if>
		<if test="mergeSupport != null ">
			AND MERGE_SUPPORT = #{mergeSupport,jdbcType=TINYINT}
		</if>
		<if test="trxNo != null and trxNo !='' ">
			AND JSON_CONTAINS(PROCESS_DTO, JSON_OBJECT('trxNo', #{trxNo}))
		</if>
		<if test="accountNo != null and accountNo !='' ">
			AND JSON_CONTAINS(PROCESS_DTO, JSON_OBJECT('accountNo', #{accountNo}))
		</if>
	</sql>
</mapper>

