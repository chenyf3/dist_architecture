<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xpay.service.extend.entity.PublishRecord">
	<sql id="table"> tbl_publish_record </sql>

	<!-- 用于返回的bean对象 -->
	<resultMap id="BaseResultMap" type="com.xpay.service.extend.entity.PublishRecord">
		<result column="ID" property="id" jdbcType="BIGINT"/>
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="VERSION" property="version" jdbcType="INTEGER"/>
		<result column="CREATOR" property="creator" jdbcType="VARCHAR"/>
		<result column="JOB_NAME" property="jobName" jdbcType="VARCHAR"/>
		<result column="BUILD_NO" property="buildNo" jdbcType="VARCHAR"/>
		<result column="BUILD_MSG" property="buildMsg" jdbcType="VARCHAR"/>
		<result column="APPS" property="apps" jdbcType="VARCHAR"/>
		<result column="IDC" property="idc" jdbcType="VARCHAR"/>
		<result column="RELAY_APP" property="relayApp" jdbcType="VARCHAR"/>
		<result column="NOTIFY_EMAIL" property="notifyEmail" jdbcType="VARCHAR"/>
		<result column="NOTIFY_URL" property="notifyUrl" jdbcType="VARCHAR"/>
		<result column="PUBLISH_TIMES" property="publishTimes" jdbcType="INTEGER"/>
		<result column="MODIFIER" property="modifier" jdbcType="VARCHAR"/>
		<result column="STATUS" property="status" jdbcType="TINYINT"/>
		<result column="QUEUE_ID" property="queueId" jdbcType="INTEGER"/>
		<result column="BUILD_ID" property="buildId" jdbcType="INTEGER"/>
		<result column="PROCESS_TIMES" property="processTimes" jdbcType="INTEGER"/>
		<result column="REMARK" property="remark" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		ID,
		CREATE_TIME,
		VERSION,
		CREATOR,
		JOB_NAME,
		BUILD_NO,
		BUILD_MSG,
		APPS,
		IDC,
		RELAY_APP,
		NOTIFY_EMAIL,
		NOTIFY_URL,
		PUBLISH_TIMES,
		MODIFIER,
		STATUS,
		QUEUE_ID,
		BUILD_ID,
		PROCESS_TIMES,
		REMARK
	</sql>

	<!-- 插入记录 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="PublishRecord">
		INSERT INTO <include refid="table" /> (
        	CREATE_TIME,
        	VERSION,
        	CREATOR,
        	JOB_NAME,
        	BUILD_NO,
        	BUILD_MSG,
        	APPS,
        	IDC,
        	RELAY_APP,
        	NOTIFY_EMAIL,
        	NOTIFY_URL,
        	PUBLISH_TIMES,
        	MODIFIER,
        	STATUS,
        	QUEUE_ID,
        	BUILD_ID,
        	PROCESS_TIMES,
        	REMARK
        ) VALUES (
			#{createTime,jdbcType=TIMESTAMP},
			0,
			#{creator,jdbcType=VARCHAR},
			#{jobName,jdbcType=VARCHAR},
			#{buildNo,jdbcType=VARCHAR},
			#{buildMsg,jdbcType=VARCHAR},
			#{apps,jdbcType=VARCHAR},
			#{idc,jdbcType=VARCHAR},
			#{relayApp,jdbcType=VARCHAR},
			#{notifyEmail,jdbcType=VARCHAR},
			#{notifyUrl,jdbcType=VARCHAR},
			#{publishTimes,jdbcType=INTEGER},
			#{modifier,jdbcType=VARCHAR},
			#{status,jdbcType=TINYINT},
			#{queueId,jdbcType=INTEGER},
			#{buildId,jdbcType=INTEGER},
			#{processTimes,jdbcType=INTEGER},
			#{remark,jdbcType=VARCHAR}
        )
	</insert>

	<!-- 批量插入记录 -->
	<insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="list">
		INSERT INTO <include refid="table" /> (
        	CREATE_TIME,
        	VERSION,
        	CREATOR,
        	JOB_NAME,
        	BUILD_NO,
        	BUILD_MSG,
        	APPS,
        	IDC,
        	RELAY_APP,
        	NOTIFY_EMAIL,
        	NOTIFY_URL,
        	PUBLISH_TIMES,
        	MODIFIER,
        	STATUS,
        	QUEUE_ID,
        	BUILD_ID,
        	PROCESS_TIMES,
        	REMARK
        ) VALUES 
			<foreach collection="list" item="item" separator=",">
			(
			#{item.createTime,jdbcType=TIMESTAMP},
			0,
			#{item.creator,jdbcType=VARCHAR},
			#{item.jobName,jdbcType=VARCHAR},
			#{item.buildNo,jdbcType=VARCHAR},
			#{item.buildMsg,jdbcType=VARCHAR},
			#{item.apps,jdbcType=VARCHAR},
			#{item.idc,jdbcType=VARCHAR},
			#{item.relayApp,jdbcType=VARCHAR},
			#{item.notifyEmail,jdbcType=VARCHAR},
			#{item.notifyUrl,jdbcType=VARCHAR},
			#{item.publishTimes,jdbcType=INTEGER},
			#{item.modifier,jdbcType=VARCHAR},
			#{item.status,jdbcType=TINYINT},
			#{item.queueId,jdbcType=INTEGER},
			#{item.buildId,jdbcType=INTEGER},
			#{item.processTimes,jdbcType=INTEGER},
			#{item.remark,jdbcType=VARCHAR}
			)
			</foreach>
	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="PublishRecord">
        UPDATE <include refid="table" />
		<set>
			CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			VERSION = #{version,jdbcType=INTEGER} + 1,
			CREATOR = #{creator,jdbcType=VARCHAR},
			JOB_NAME = #{jobName,jdbcType=VARCHAR},
			BUILD_NO = #{buildNo,jdbcType=VARCHAR},
			BUILD_MSG = #{buildMsg,jdbcType=VARCHAR},
			APPS = #{apps,jdbcType=VARCHAR},
			IDC = #{idc,jdbcType=VARCHAR},
			RELAY_APP = #{relayApp,jdbcType=VARCHAR},
			NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
			NOTIFY_URL = #{notifyUrl,jdbcType=VARCHAR},
			PUBLISH_TIMES = #{publishTimes,jdbcType=INTEGER},
			MODIFIER = #{modifier,jdbcType=VARCHAR},
			STATUS = #{status,jdbcType=TINYINT},
			QUEUE_ID = #{queueId,jdbcType=INTEGER},
			BUILD_ID = #{buildId,jdbcType=INTEGER},
			PROCESS_TIMES = #{processTimes,jdbcType=INTEGER},
			REMARK = #{remark,jdbcType=VARCHAR}
		</set>
        WHERE ID = #{id,jdbcType=BIGINT} and VERSION = #{version,jdbcType=INTEGER}
	</update>

	<!-- 只更新不为null的属性 -->
	<update id="updateIfNotNull" parameterType="PublishRecord">
		UPDATE <include refid="table" />
		<set>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			VERSION = #{version,jdbcType=INTEGER} + 1,
			<if test="creator != null">
				CREATOR = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="jobName != null">
				JOB_NAME = #{jobName,jdbcType=VARCHAR},
			</if>
			<if test="buildNo != null">
				BUILD_NO = #{buildNo,jdbcType=VARCHAR},
			</if>
			<if test="buildMsg != null">
				BUILD_MSG = #{buildMsg,jdbcType=VARCHAR},
			</if>
			<if test="apps != null">
				APPS = #{apps,jdbcType=VARCHAR},
			</if>
			<if test="idc != null">
				IDC = #{idc,jdbcType=VARCHAR},
			</if>
			<if test="relayApp != null">
				RELAY_APP = #{relayApp,jdbcType=VARCHAR},
			</if>
			<if test="notifyEmail != null">
				NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
			</if>
			<if test="notifyUrl != null">
				NOTIFY_URL = #{notifyUrl,jdbcType=VARCHAR},
			</if>
			<if test="publishTimes != null">
				PUBLISH_TIMES = #{publishTimes,jdbcType=INTEGER},
			</if>
			<if test="modifier != null">
				MODIFIER = #{modifier,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS = #{status,jdbcType=TINYINT},
			</if>
			<if test="queueId != null">
				QUEUE_ID = #{queueId,jdbcType=INTEGER},
			</if>
			<if test="buildId != null">
				BUILD_ID = #{buildId,jdbcType=INTEGER},
			</if>
			<if test="processTimes != null">
				PROCESS_TIMES = #{processTimes,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				REMARK = #{remark,jdbcType=VARCHAR}
			</if>
		</set>
		WHERE ID = #{id,jdbcType=BIGINT} and VERSION = #{version,jdbcType=INTEGER}
	</update>
	
	<!-- 多条件组合查询 -->
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
		<choose>
			<when test="sortColumns != null and sortColumns !='' ">
				<![CDATA[ ORDER BY ${sortColumns} ]]>
			</when>
			<otherwise>
				<![CDATA[ ORDER BY ID DESC ]]>
			</otherwise>
		</choose>
	</select>
	
	<!-- 根据多条件组合查询，计算总记录数 -->
	<select id="countBy" parameterType="java.util.Map" resultType="long">
		SELECT count(ID) FROM
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<!-- 按查询条件删除 -->
	<delete id="deleteBy">
        DELETE FROM <include refid="table" /> 
		<where>
			<include refid="condition_sql" />
		</where>
    </delete>

	<!-- 根据多个id查询 -->
    <select id="listByIdList" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE ID IN 
		<foreach collection="list" item="item" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
	</select>

	<!-- 根据id查询 -->
    <select id="getById" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" /> 
		WHERE ID = #{id,jdbcType=BIGINT}  
	</select>

	<!-- 按id主键删除 -->
	<delete id="deleteById">
        DELETE FROM <include refid="table" /> WHERE ID = #{id,jdbcType=BIGINT}
    </delete>

	<!-- 按多个id主键删除 -->
	<delete id="deleteByIdList" parameterType="list">
		DELETE FROM <include refid="table" />
		WHERE ID IN 
		<foreach collection="list" item="item" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
	</delete>

	<!-- ↑↑↑↑↑↑ 如果有新增字段、删除字段、修改字段 以上内容可用模板生成新内容后直接替换 ↑↑↑↑↑↑ -->
	<!-- ↓↓↓↓↓↓ 以下内容是根据需求手动添加或修改的，请勿使用模板内容直接覆盖 ↓↓↓↓↓↓ -->

	<sql id="condition_sql">
		<if test="id != null ">
			AND ID = #{id,jdbcType=BIGINT}
		</if>
		<if test="idList != null and idList.size() > 0">
			AND ID IN <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
		</if>
		<choose>
			<when test="createTimeBegin !=null and createTimeBegin != '' and createTimeEnd != null and createTimeEnd != '' ">
				AND CREATE_TIME BETWEEN #{createTimeBegin,jdbcType=TIMESTAMP} AND #{createTimeEnd,jdbcType=TIMESTAMP}
			</when >
			<when test="createTimeBegin !=null and createTimeBegin != ''">
				AND CREATE_TIME &gt;= #{createTimeBegin, jdbcType=TIMESTAMP}
			</when >
			<when test="createTimeEnd != null and createTimeEnd != '' ">
				AND CREATE_TIME &lt;= #{createTimeEnd, jdbcType=TIMESTAMP}
			</when >
			<otherwise>
			</otherwise>
		</choose>
		<if test="version != null ">
			AND VERSION = #{version,jdbcType=INTEGER}
		</if>
		<if test="creator != null and creator !='' ">
			AND CREATOR = #{creator,jdbcType=VARCHAR}
		</if>
		<if test="buildNo != null and buildNo !='' ">
			AND BUILD_NO = #{buildNo,jdbcType=VARCHAR}
		</if>
		<if test="buildMsg != null and buildMsg !='' ">
			AND BUILD_MSG = #{buildMsg,jdbcType=VARCHAR}
		</if>
		<if test="idc != null and idc !='' ">
			AND IDC = #{idc,jdbcType=VARCHAR}
		</if>
		<if test="status != null ">
			AND STATUS = #{status,jdbcType=TINYINT}
		</if>
	</sql>

	<select id="getNotFinishPublishRecord" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE STATUS IN (1,2,3) order by ID asc limit 1
	</select>
</mapper>

