server.port=8099

#mybatis
#entity扫描的包名，需每个项目单独配置
mybatis.type-aliases-package=com.xpay.demo.sharding.entity
#Mapper.xml所在的位置
mybatis.mapper-locations=classpath:mapper/*.xml
#开启MyBatis的二级缓存
mybatis.configuration.cache-enabled=true
#mybatis分页插件pagehelper
pagehelper.helperDialect=mysql
#如果reasonable为true，分页查询超过最后一页时会一直返回最后一页
pagehelper.reasonable=false
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


#配置数据源，给数据源起名ds01,ds02...此处可配置多数据源
spring.shardingsphere.datasource.names=ds01,ds02,ds03,ds04,ds05,ds06

#配置数据源ds01，即第1组第1个数据源
spring.shardingsphere.datasource.ds01.type=com.alibaba.druid.pool.DruidDataSource
#mysql-connector 8以上配置为 com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds01.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds01.url=jdbc:mysql://10.10.10.39:3306/g01-orderds-01?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&useInformationSchema=true
spring.shardingsphere.datasource.ds01.username=app_dev
spring.shardingsphere.datasource.ds01.password=2021@Mysql
#连接池初始化、最小、最大连接数
spring.shardingsphere.datasource.ds01.initial-size=2
spring.shardingsphere.datasource.ds01.min-idle=2
spring.shardingsphere.datasource.ds01.max-active=200
#获取连接最大等待时间
spring.shardingsphere.datasource.ds01.max-wait=5000
#检测连接是否有效的sql
spring.shardingsphere.datasource.ds01.validation-query=SELECT 'x'
spring.shardingsphere.datasource.ds01.validation-query-timeout=3000
spring.shardingsphere.datasource.ds01.test-on-borrow=false
spring.shardingsphere.datasource.ds01.test-on-return=false
spring.shardingsphere.datasource.ds01.test-while-idle=true
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位(毫秒)
spring.shardingsphere.datasource.ds01.time-between-eviction-runs-millis=20000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.shardingsphere.datasource.ds01.min-evictable-idle-time-millis=30000

#配置数据源ds02，即第2组第1个数据源
spring.shardingsphere.datasource.ds02.type=com.alibaba.druid.pool.DruidDataSource
#mysql-connector 8以上配置为 com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds02.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds02.url=jdbc:mysql://10.10.10.39:3306/g02-orderds-01?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&useInformationSchema=true
spring.shardingsphere.datasource.ds02.username=app_dev
spring.shardingsphere.datasource.ds02.password=2021@Mysql

#配置数据源ds03，即第2组第2个数据源
spring.shardingsphere.datasource.ds03.type=com.alibaba.druid.pool.DruidDataSource
#mysql-connector 8以上配置为 com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds03.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds03.url=jdbc:mysql://10.10.10.39:3306/g02-orderds-02?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&useInformationSchema=true
spring.shardingsphere.datasource.ds03.username=app_dev
spring.shardingsphere.datasource.ds03.password=2021@Mysql

#配置数据源ds04，即第3组第1个数据源
spring.shardingsphere.datasource.ds04.type=com.alibaba.druid.pool.DruidDataSource
#mysql-connector 8以上配置为 com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds04.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds04.url=jdbc:mysql://10.10.10.39:3306/g03-orderds-01?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&useInformationSchema=true
spring.shardingsphere.datasource.ds04.username=app_dev
spring.shardingsphere.datasource.ds04.password=2021@Mysql

#配置数据源ds05，即第3组第2个数据源
spring.shardingsphere.datasource.ds05.type=com.alibaba.druid.pool.DruidDataSource
#mysql-connector 8以上配置为 com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds05.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds05.url=jdbc:mysql://10.10.10.39:3306/g03-orderds-02?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&useInformationSchema=true
spring.shardingsphere.datasource.ds05.username=app_dev
spring.shardingsphere.datasource.ds05.password=2021@Mysql

#配置数据源ds06，即第3组第3个数据源
spring.shardingsphere.datasource.ds06.type=com.alibaba.druid.pool.DruidDataSource
#mysql-connector 8以上配置为 com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds06.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds06.url=jdbc:mysql://10.10.10.39:3306/g03-orderds-03?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&useInformationSchema=true
spring.shardingsphere.datasource.ds06.username=app_dev
spring.shardingsphere.datasource.ds06.password=2021@Mysql

#配置默认数据源，即那些不需要分库分表的表从哪个数据源进行读写
spring.shardingsphere.sharding.default-data-source-name=ds01

#配置需要分库分表的表有哪些
spring.shardingsphere.sharding.binding-tables=t_order,t_order_item
#配置t_order表的分库策略、分表策略
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds0$->{1..1}.t_order_$->{1..1},ds0$->{2..3}.t_order_$->{1..2},ds0$->{4..6}.t_order_$->{1..3}
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.precise-algorithm-class-name=com.xpay.starter.sharding.algorithm.DatabasePreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=com.xpay.starter.sharding.algorithm.TablePreciseShardingAlgorithm
#配置t_order_item表的分库策略、分表策略
spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds0$->{1..1}.t_order_item$->{1..1},ds0$->{2..3}.t_order_item$->{1..2},ds0$->{4..6}.t_order_item$->{1..3}
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.standard.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.standard.precise-algorithm-class-name=com.xpay.starter.sharding.algorithm.DatabasePreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.standard.precise-algorithm-class-name=com.xpay.starter.sharding.algorithm.TablePreciseShardingAlgorithm

#配置各个表的分片规则
#配置t_order表的分片规则
#第1组
spring.sharding.rules[t_order][0].name=group01
spring.sharding.rules[t_order][0].startId=1
spring.sharding.rules[t_order][0].endId=20000000
spring.sharding.rules[t_order][0].dbRules[0].name=ds01
spring.sharding.rules[t_order][0].dbRules[0].hashValue=0
#第2组
spring.sharding.rules[t_order][1].name=group02
spring.sharding.rules[t_order][1].startId=20000001
spring.sharding.rules[t_order][1].endId=60000000
spring.sharding.rules[t_order][1].dbRules[0].name=ds02
spring.sharding.rules[t_order][1].dbRules[0].hashValue=0,2
spring.sharding.rules[t_order][1].dbRules[1].name=ds03
spring.sharding.rules[t_order][1].dbRules[1].hashValue=1,3
#第3组
spring.sharding.rules[t_order][2].name=group03
spring.sharding.rules[t_order][2].startId=60000001
spring.sharding.rules[t_order][2].endId=-1
spring.sharding.rules[t_order][2].perTableRow=20000000
spring.sharding.rules[t_order][2].dbRules[0].name=ds04
spring.sharding.rules[t_order][2].dbRules[0].hashValue=0,3,6
spring.sharding.rules[t_order][2].dbRules[1].name=ds05
spring.sharding.rules[t_order][2].dbRules[1].hashValue=1,4,7
spring.sharding.rules[t_order][2].dbRules[2].name=ds06
spring.sharding.rules[t_order][2].dbRules[2].hashValue=2,5,8

#配置t_order_item表的分片规则
#第1组
spring.sharding.rules[t_order_item][0].name=group01
spring.sharding.rules[t_order_item][0].startId=1
spring.sharding.rules[t_order_item][0].endId=20000000
spring.sharding.rules[t_order_item][0].dbRules[0].name=ds01
spring.sharding.rules[t_order_item][0].dbRules[0].hashValue=0
#第2组
spring.sharding.rules[t_order_item][1].name=group02
spring.sharding.rules[t_order_item][1].startId=20000001
spring.sharding.rules[t_order_item][1].endId=60000000
spring.sharding.rules[t_order_item][1].dbRules[0].name=ds02
spring.sharding.rules[t_order_item][1].dbRules[0].hashValue=0,2
spring.sharding.rules[t_order_item][1].dbRules[1].name=ds03
spring.sharding.rules[t_order_item][1].dbRules[1].hashValue=1,3
#第3组
spring.sharding.rules[t_order_item][2].name=group03
spring.sharding.rules[t_order_item][2].startId=60000001
spring.sharding.rules[t_order_item][2].endId=-1
spring.sharding.rules[t_order_item][2].perTableRow=20000000
spring.sharding.rules[t_order_item][2].dbRules[0].name=ds04
spring.sharding.rules[t_order_item][2].dbRules[0].hashValue=0,3,6
spring.sharding.rules[t_order_item][2].dbRules[1].name=ds05
spring.sharding.rules[t_order_item][2].dbRules[1].hashValue=1,4,7
spring.sharding.rules[t_order_item][2].dbRules[2].name=ds06
spring.sharding.rules[t_order_item][2].dbRules[2].hashValue=2,5,8